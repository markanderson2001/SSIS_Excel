<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/21/2017 7:57:22 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DEVELOP-2016"
  DTS:CreatorName="DEVELOP-2016\marka"
  DTS:DTSID="{EBE9C41D-09DB-4775-B4F0-67960EF39728}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.4001.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="7"
  DTS:VersionGUID="{F11CB67C-7E02-4298-9F75-665B5F3D0E36}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DEVELOP-2016\MSSQLSERV2016DEV.ADPCt830.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EC566CC1-932F-4FEE-9BC0-ABBDA45D72A5}"
      DTS:ObjectName="DEVELOP-2016\MSSQLSERV2016DEV.ADPCt830.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DEVELOP-2016\MSSQLSERV2016DEV;User ID=sa;Initial Catalog=ADPCt830;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAjdhRb7jMAky16gWnnTZASwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADfSh6dB2WhV+DVm4hG9YBa5M2MdGstRBud12BkcliCswAAAAAOgAAAAAIAACAAAAA5awL/hXxfZGNkNUM5Fhi1ZYzEgFRgiSuJ9qcAkka6cCAAAADebWklxQj8Fix+n11LkOofYPuANSK7PgYrb88HMeS24EAAAABDbb1HSBr2d9Fb75NKRx1fw81/bkdFA0zvmIgPG+DY9wdCSz4lsnobFuu96PufJIYdH6LPSQ8/IgpZFIFJAxLx</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{41953F14-7122-401B-97FB-DA769E57732E}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Shared\GitHub\Project Files\SSIS_ConvertDbExcel\TR_TchecksList.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{AFCAFAE8-D68C-4E5E-A2B0-394F8A56BA95}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Shared\GitHub\Project Files\SSIS_ConvertDbExcel\TR_TchecksList.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{3BC30CB1-1744-4162-8FD9-59484107D535}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Shared\GitHub\Project Files\SSIS_ConvertDbExcel\TR_TchecksList.xls;Extended Properties=&quot;Excel 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Treasury Checks into Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8BF7DA1E-3006-4942-8D72-EE7C9E026ED8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Treasury Checks into Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Treasury Checks into Excel\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[id]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[year]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="4"
                      cachedName="year"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[year]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_type]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="tr_type"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_type]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_posted]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="tr_posted"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_posted]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_acctnum]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="3"
                      cachedName="tr_acctnum"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_acctnum]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_descrip]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="30"
                      cachedName="tr_descrip"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_descrip]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_amount]"
                      cachedDataType="numeric"
                      cachedName="tr_amount"
                      cachedPrecision="18"
                      cachedScale="4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_amount]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="tr_date"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_date]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_num]"
                      cachedDataType="numeric"
                      cachedName="tr_num"
                      cachedPrecision="18"
                      cachedScale="4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_num]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tchkdate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="tchkdate"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tchkdate]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_class]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="26"
                      cachedName="tr_class"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_class]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input].Columns[tr_directdep]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="tr_directdep"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_directdep]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of id]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of id]"
                      name="Copy of id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[id]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of year]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of year]"
                      name="Copy of year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[year]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_type]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_type]"
                      name="Copy of tr_type"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_type]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_posted]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_posted]"
                      name="Copy of tr_posted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_posted]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_acctnum]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="3"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_acctnum]"
                      name="Copy of tr_acctnum"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_acctnum]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_descrip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="30"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_descrip]"
                      name="Copy of tr_descrip"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_descrip]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_amount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_amount]"
                      name="Copy of tr_amount"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_amount]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_date]"
                      name="Copy of tr_date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_num]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_num]"
                      name="Copy of tr_num"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_num]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tchkdate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tchkdate]"
                      name="Copy of tchkdate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tchkdate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_class]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="26"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_class]"
                      name="Copy of tr_class"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_class]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_directdep]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_directdep]"
                      name="Copy of tr_directdep"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_directdep]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Treasury Checks into Excel\Excel Destination"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="Excel Destination"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Excel_Destination2</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Treasury Checks into Excel\Excel Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of id]"
                      cachedDataType="i4"
                      cachedName="Copy of id"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[id]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of id]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_type]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="Copy of tr_type"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_type]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_type]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_posted]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="Copy of tr_posted"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_posted]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_posted]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_acctnum]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="Copy of tr_acctnum"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_acctnum]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_acctnum]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_descrip]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="Copy of tr_descrip"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_descrip]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_descrip]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_amount]"
                      cachedDataType="numeric"
                      cachedName="Copy of tr_amount"
                      cachedPrecision="18"
                      cachedScale="4"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_amount]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_amount]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Copy of tr_date"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_date]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_date]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_num]"
                      cachedDataType="numeric"
                      cachedName="Copy of tr_num"
                      cachedPrecision="18"
                      cachedScale="4"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_num]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_num]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tchkdate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Copy of tchkdate"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tchkdate]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tchkdate]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_class]"
                      cachedDataType="wstr"
                      cachedLength="26"
                      cachedName="Copy of tr_class"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_class]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_class]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of tr_directdep]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="Copy of tr_directdep"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_directdep]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of tr_directdep]" />
                    <inputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of year]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="Copy of year"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[year]"
                      lineageId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of year]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[id]"
                      dataType="r8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[year]"
                      dataType="nText"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_type]"
                      dataType="nText"
                      name="tr_type" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_posted]"
                      dataType="nText"
                      name="tr_posted" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_acctnum]"
                      dataType="nText"
                      name="tr_acctnum" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_descrip]"
                      dataType="nText"
                      name="tr_descrip" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_amount]"
                      dataType="r8"
                      name="tr_amount" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_date]"
                      dataType="date"
                      name="tr_date" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_num]"
                      dataType="r8"
                      name="tr_num" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tchkdate]"
                      dataType="date"
                      name="tchkdate" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_class]"
                      dataType="nText"
                      name="tr_class" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[tr_directdep]"
                      dataType="nText"
                      name="tr_directdep" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Treasury Checks into Excel\Excel Destination.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Treasury Checks into Excel\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tchecks]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Treasury Checks into Excel\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DEVELOP-2016\MSSQLSERV2016DEV.ADPCt830.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[DEVELOP-2016\MSSQLSERV2016DEV.ADPCt830.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[id]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[id]"
                      name="id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[year]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[year]"
                      length="4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[year]"
                      name="year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_type]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_type]"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_type]"
                      name="tr_type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_posted]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_posted]"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_posted]"
                      name="tr_posted"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_acctnum]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_acctnum]"
                      length="3"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_acctnum]"
                      name="tr_acctnum"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_descrip]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_descrip]"
                      length="30"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_descrip]"
                      name="tr_descrip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_amount]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_amount]"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_amount]"
                      name="tr_amount"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_date]"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_date]"
                      name="tr_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_num]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_num]"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_num]"
                      name="tr_num"
                      precision="18"
                      scale="4"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tchkdate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tchkdate]"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tchkdate]"
                      name="tchkdate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_class]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_class]"
                      length="26"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_class]"
                      name="tr_class"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_directdep]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_directdep]"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].Columns[tr_directdep]"
                      name="tr_directdep"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[year]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_type]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="tr_type" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_posted]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="tr_posted" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_acctnum]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      name="tr_acctnum" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_descrip]"
                      codePage="1252"
                      dataType="str"
                      length="30"
                      name="tr_descrip" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_amount]"
                      dataType="numeric"
                      name="tr_amount"
                      precision="18"
                      scale="4" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_date]"
                      dataType="dbTimeStamp"
                      name="tr_date" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_num]"
                      dataType="numeric"
                      name="tr_num"
                      precision="18"
                      scale="4" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tchkdate]"
                      dataType="dbTimeStamp"
                      name="tchkdate" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_class]"
                      codePage="1252"
                      dataType="str"
                      length="26"
                      name="tr_class" />
                    <externalMetadataColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[tr_directdep]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="tr_directdep" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[year]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_type]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_type]"
                      name="tr_type" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_posted]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_posted]"
                      name="tr_posted" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_acctnum]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_acctnum]"
                      name="tr_acctnum" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_descrip]"
                      codePage="1252"
                      dataType="str"
                      length="30"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_descrip]"
                      name="tr_descrip" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_amount]"
                      dataType="numeric"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_amount]"
                      name="tr_amount"
                      precision="18"
                      scale="4" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_date]"
                      name="tr_date" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_num]"
                      dataType="numeric"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_num]"
                      name="tr_num"
                      precision="18"
                      scale="4" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tchkdate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tchkdate]"
                      name="tchkdate" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_class]"
                      codePage="1252"
                      dataType="str"
                      length="26"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_class]"
                      name="tr_class" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_directdep]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[tr_directdep]"
                      name="tr_directdep" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Treasury Checks into Excel.Paths[Data Conversion Output]"
              endId="Package\Import Treasury Checks into Excel\Excel Destination.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\Import Treasury Checks into Excel\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import Treasury Checks into Excel.Paths[OLE DB Source Output]"
              endId="Package\Import Treasury Checks into Excel\Data Conversion.Inputs[Data Conversion Input]"
              name="OLE DB Source Output"
              startId="Package\Import Treasury Checks into Excel\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DTSID="{08DDEF5E-A387-46E6-BD4D-A99A761C8495}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_652ff073be7a4e748f6dfa2d514b723b"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_652ff073be7a4e748f6dfa2d514b723b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// 
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show("Conversion Starting", "XLS", MessageBoxButtons.OK);
			Dts.TaskResult = (int)ScriptResults.Success;

		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_652ff073be7a4e748f6dfa2d514b723b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_652ff073be7a4e748f6dfa2d514b723b</msb:DisplayName>
		<msb:ProjectId>{5D8C4550-FCFA-4F64-B069-EEB96B6AF349}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_652ff073be7a4e748f6dfa2d514b723b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_652ff073be7a4e748f6dfa2d514b723b.Properties.Settings.get_Default():ST_652ff073be7a4e748f6dfa2d514b723b.Properties.Sett" +
    "ings")]

namespace ST_652ff073be7a4e748f6dfa2d514b723b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_652ff073be7a4e748f6dfa2d514b723b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3C653F1D-6469-4923-9158-894CA3450B84}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_652ff073be7a4e748f6dfa2d514b723b</RootNamespace>
    <AssemblyName>ST_652ff073be7a4e748f6dfa2d514b723b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_652ff073be7a4e748f6dfa2d514b723b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_652ff073be7a4e748f6dfa2d514b723b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]


//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_652ff073be7a4e748f6dfa2d514b723b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_652ff073be7a4e748f6dfa2d514b723b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_652ff073be7a4e748f6dfa2d514b723b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_652ff073be7a4e748f6dfa2d514b723b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_652ff073be7a4e748f6dfa2d514b723b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_652ff073be7a4e748f6dfa2d514b723b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKmFm1kAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAMi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAsAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
LQAAAAAAAEgAAAACAAUA2CAAAFALAAABAAAAAAAAACgsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpyAQAAcHIpAABwFigQAAAKJgIoEQAAChZvEgAACioeAigT
AAAKKh4CKBQAAAoqrn4BAAAELR5yMQAAcNADAAACKBUAAApvFgAACnMXAAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoGAAACioucwgAAAaAAwAABCoAAABCU0pCAQABAAAAAAAM
AAAAdjQuMC4zMDMxOQAAAAAFAGwAAACsAwAAI34AABgEAAAwBQAAI1N0cmluZ3MAAAAASAkAAKQA
AAAjVVMA7AkAABAAAAAjR1VJRAAAAPwJAABUAQAAI0Jsb2IAAAAAAAAAAgAAAVcdoAEJAwAAAPoB
MwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAYAAAAAgAAABAAAAACAAAAAwAAAAQAAAABAAAA
BAAAAAEAAAABAAAAAAAaAwEAAAAAAAYA3QHhAwYAbALhAwYAKQHOAw8AVQQAAAYAVgGPAwYAwAGP
AwYAoQGPAwYAUwKPAwYA/QGPAwYAFgKPAwYAbQGPAwYAiAGQAgoAMQLJAgoAqADJAgYASQNCAwYA
DAHOAwYA4QRCAwYAsQMBBAYAoQN6Aw4A3AAEAw4APQEEAw4AxABlAwYA8QDhAxIAFQWcBBIA9ASc
BBIAsQScBAoA8gLJAgYAcwBCAwYATwBCAwYAJAWPAwAAAAABAAAAAAABAAEAAQAQAFoDEgA5AAEA
AQAAABAACARkBEUAAQADAAABEACTBGQEWQADAAcAAwEAANMEAAA9AAQACgARAE4DWAARAJgAXAAR
AD8AYAAGBgoAZABWgMMEZwBWgHgAZwBQIAAAAACGAGADBgABAG8gAAAAAIYYwQMGAAEAdyAAAAAA
gxjBAwYAAQB/IAAAAACTCK0DawABAKsgAAAAAJMIgABwAAEAsiAAAAAAkwiMAHUAAQC6IAAAAACW
COgEewACAMEgAAAAAIYYwQMGAAIAySAAAAAAkRjHA4AAAgAAAAEAigIJAMEDAQARAMEDBgAZAMED
CgApAMEDEAAxAMEDEAA5AMEDEABBAMEDEABJAMEDEABRAMEDEABZAMEDEABhAMEDEABpAMEDBgCB
AMEDBgCpAMEDFQC5AMEDBgDBABAFGwBxAMsEJADZAAEFAQBxAMEDBgCJAMEDBgDhAGEAKQDhACAF
MACRAMEDNQCxAMEDBgAIABQATgAIABgAUwApAHMAuwAuAAsAkwAuABMAnAAuABsAuwAuACMAxAAu
ACsA7QAuADMA7QAuADsA7QAuAEMAxAAuAEsA8wAuAFMA7QAuAFsACgFDAGMAUwBJAHMAuwBhAHsA
UwBjAGsAUwADAAEABAADAAAAsQOEAAAAoACJAAAA7ASOAAIABAADAAIABQAFAAEABgAFAAIABwAH
AASAAAABAAAAKhlsjgAAAAAAABIAAAAEAAAAAAAAAAAAAAA8ADYAAAAAAA0AAAAAAAAAAAAAAEUA
qgIAAAAABAAAAAAAAAAAAAAAPABCAwAAAAAEAAAAAAAAAAAAAAA8AJwEAAAAAAAAAAABAAAAEgQA
AAUAAgAAAAAAADxNb2R1bGU+AHZhbHVlX18AU1RfNjUyZmYwNzNiZTdhNGU3NDhmNmRmYTJkNTE0
YjcyM2IAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTVF82NTJmZjA3M2JlN2E0ZTc0OGY2ZGZhMmQ1MTRiNzIzYi5kbGwAU3lzdGVtAEVudW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzY1MmZmMDczYmU3YTRlNzQ4ZjZkZmEyZDUxNGI3
MjNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF82NTJm
ZjA3M2JlN2E0ZTc0OGY2ZGZhMmQ1MTRiNzIzYi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFN5c3RlbS5X
aW5kb3dzLkZvcm1zAE1lc3NhZ2VCb3hCdXR0b25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAE9iamVjdABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU2hvdwBN
ZXNzYWdlQm94AGdldF9Bc3NlbWJseQAAAAAAJ0MAbwBuAHYAZQByAHMAaQBvAG4AIABTAHQAYQBy
AHQAaQBuAGcAAAdYAEwAUwAAcVMAVABfADYANQAyAGYAZgAwADcAMwBiAGUANwBhADQAZQA3ADQA
OABmADYAZABmAGEAMgBkADUAMQA0AGIANwAyADMAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAKFmIOfT61dMkaBaW14OHxIABCABAQgDIAABBSABARERBCABAQ4F
IAEBEVEIAAMRZQ4OEWkEIAASbQYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEE
AAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAAS
SQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUXzY1MmZmMDczYmU3YTRlNzQ4ZjZkZmEyZDUxNGI3MjNiAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAgtAAAAAAAAAAAA
ACItAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAULQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAbI4qGQAAAQBsjioZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA2ADUAMgBmAGYAMAA3ADMAYgBlADcAYQA0AGUANwA0ADgAZgA2AGQAZgBhADIA
ZAA1ADEANABiADcAMgAzAGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA0ADQAMgAuADMANgA0ADYAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA2ADUAMgBmAGYAMAA3ADMAYgBlADcAYQA0AGUANwA0ADgAZgA2AGQAZgBhADIAZAA1
ADEANABiADcAMgAzAGIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADYANQAyAGYAZgAwADcAMwBiAGUANwBhADQAZQA3ADQAOABmADYAZABm
AGEAMgBkADUAMQA0AGIANwAyADMAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA2ADUAMgBmAGYAMAA3ADMAYgBlADcAYQA0AGUANwA0ADgAZgA2AGQAZgBh
ADIAZAA1ADEANABiADcAMgAzAGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANAA0ADIALgAzADYANAA2ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANAA0ADIALgAzADYANAA2ADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAND0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0DE67088-B410-48F7-BC18-B6FD6382E7B1}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Treasury Checks into Excel" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="240,42"
          Id="Package\Import Treasury Checks into Excel"
          TopLeft="111,241" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="125,112" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="190.5,154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.5,87"
              Start="0,0"
              End="40.5,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.5"
                    Point2="0,43.5"
                    Point3="4,43.5" />
                  <mssgle:LineSegment
                    End="36.5,43.5" />
                  <mssgle:CubicBezierSegment
                    Point1="36.5,43.5"
                    Point2="40.5,43.5"
                    Point3="40.5,47.5" />
                  <mssgle:LineSegment
                    End="40.5,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Package to IMport Data for Excel - Treasury and Trends"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="318,40"
          Id="6cefff82-a765-461c-9c4f-2f32657f1755"
          TopLeft="417,16" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Treasury Checks into Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150,42"
          Id="Package\Import Treasury Checks into Excel\OLE DB Source"
          TopLeft="337,149" />
        <NodeLayout
          Size="159,42"
          Id="Package\Import Treasury Checks into Excel\Excel Destination"
          TopLeft="396,317" />
        <NodeLayout
          Size="156,42"
          Id="Package\Import Treasury Checks into Excel\Data Conversion"
          TopLeft="352,230" />
        <EdgeLayout
          Id="Package\Import Treasury Checks into Excel.Paths[OLE DB Source Output]"
          TopLeft="412,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18,39"
              Start="0,0"
              End="18,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5"
                    Point2="0,19.5"
                    Point3="4,19.5" />
                  <mssgle:LineSegment
                    End="14,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="14,19.5"
                    Point2="18,19.5"
                    Point3="18,23.5" />
                  <mssgle:LineSegment
                    End="18,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Treasury Checks into Excel.Paths[Data Conversion Output]"
          TopLeft="430,272">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.5,45"
              Start="0,0"
              End="45.5,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="41.5,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="41.5,22.5"
                    Point2="45.5,22.5"
                    Point3="45.5,26.5" />
                  <mssgle:LineSegment
                    End="45.5,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Treasury Checks into Excel\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Treasury Checks into Excel\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>